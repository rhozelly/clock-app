{"ast":null,"code":"import _asyncToGenerator from \"C:/Project/clocked/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../core/services/authentication.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction UserCreateComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The username and password were not recognized \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserCreateComponent = /*#__PURE__*/(() => {\n  class UserCreateComponent {\n    constructor(fb, route, router, authService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.authService = authService;\n      this.loginInvalid = false;\n      this.formSubmitAttempt = false;\n      this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/dashboard';\n      this.form = this.fb.group({\n        email: ['', Validators.email],\n        password: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var _a, _b;\n\n        _this.loginInvalid = false;\n        _this.formSubmitAttempt = false;\n\n        if (_this.form.valid) {\n          try {\n            const email = (_a = _this.form.get('email')) === null || _a === void 0 ? void 0 : _a.value;\n            const password = (_b = _this.form.get('password')) === null || _b === void 0 ? void 0 : _b.value;\n            yield _this.authService.createUserWithEmailAndPassword(email, password);\n          } catch (err) {\n            _this.loginInvalid = true;\n          }\n        } else {\n          _this.formSubmitAttempt = true;\n        }\n      })();\n    }\n\n  }\n\n  UserCreateComponent.ɵfac = function UserCreateComponent_Factory(t) {\n    return new (t || UserCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n  };\n\n  UserCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserCreateComponent,\n    selectors: [[\"app-user-create\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [1, \"full-width-input\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n    template: function UserCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-content\");\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UserCreateComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Create User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, UserCreateComponent_mat_error_5_Template, 2, 0, \"mat-error\", 1);\n        i0.ɵɵelementStart(6, \"mat-form-field\", 2);\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementStart(8, \"mat-error\");\n        i0.ɵɵtext(9, \" Please provide a valid email address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2);\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵelementStart(12, \"mat-error\");\n        i0.ɵɵtext(13, \" Please provide a valid password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 5);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginInvalid);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.NgIf, i6.MatFormField, i7.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.MatError, i8.MatButton],\n    styles: [\"\"]\n  });\n  return UserCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}