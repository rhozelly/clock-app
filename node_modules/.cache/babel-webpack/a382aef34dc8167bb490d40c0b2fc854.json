{"ast":null,"code":"import { TimesheetsDialogComponent } from \"./timesheets-dialog/timesheets-dialog.component\";\nimport { combineLatest } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../core/services/main.service\";\nimport * as i3 from \"../core/services/settings.service\";\nimport * as i4 from \"../core/services/timesheet.service\";\nimport * as i5 from \"@angular/cdk/layout\";\nimport * as i6 from \"@angular/fire/firestore\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/list\";\nimport * as i10 from \"@angular/common\";\n\nfunction TimesheetsComponent_mat_list_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list\", 13);\n    i0.ɵɵlistener(\"click\", function TimesheetsComponent_mat_list_17_Template_mat_list_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const log_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.timesheetDialog(\"update\", log_r1);\n    });\n    i0.ɵɵelementStart(1, \"mat-list-item\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-list-item\", 3);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-list-item\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-list-item\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const log_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 4, log_r1.date, \"MM/dd/yy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(log_r1.desc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(log_r1.project);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(log_r1.time);\n  }\n}\n\nexport let TimesheetsComponent = /*#__PURE__*/(() => {\n  class TimesheetsComponent {\n    constructor(dialog, main, sett, time, breakpointObserver, firestore) {\n      this.dialog = dialog;\n      this.main = main;\n      this.sett = sett;\n      this.time = time;\n      this.breakpointObserver = breakpointObserver;\n      this.firestore = firestore;\n      this.dialogHeightSize = '640px';\n      this.dialogMaxWeightSize = '80vw';\n      this.dialogWeightSize = '50%';\n      this.myID = '';\n      this.logs = [];\n      this.dates = [];\n      this.end_length = '';\n      this.start_length = '';\n      this.first_response = [];\n      this.last_response = [];\n      this.pagination_click = 0;\n    }\n\n    ngOnInit() {\n      const collection_id = localStorage.getItem('collection-id');\n      this.myID = this.main.decrypt(collection_id, 'collection-id');\n      this.breakpointObserver.observe(['(min-width: 768px)']).subscribe(state => {\n        if (state.matches) {\n          this.dialogHeightSize = '640px';\n          this.dialogMaxWeightSize = '80vw';\n          this.dialogWeightSize = '50%';\n        } else {\n          this.dialogWeightSize = '100%';\n          this.dialogHeightSize = '100%';\n          this.dialogMaxWeightSize = '100%';\n        }\n      });\n      this.getTimesheets(this.myID);\n    }\n\n    getTimesheets(id) {\n      const fooPosts = this.firestore.collection('timesheets').doc(id).collection('SEP-2021', ref => ref.orderBy('date', 'desc').limit(4)).valueChanges();\n      const barPosts = this.firestore.collection('timesheets').doc(id).collection('AUG-2021', ref => ref.orderBy('date', 'desc').limit(4)).valueChanges();\n      const combi_query = combineLatest(fooPosts, barPosts).pipe(map(arr => arr.reduce((acc, cur) => acc.concat(cur))));\n      combi_query.subscribe(result => {\n        this.start_length = result.length;\n        this.end_length = result.length - 1;\n\n        if (result) {\n          const log = result ? result : [];\n          this.first_response = log[0];\n          this.last_response = log[log.length - 1];\n          log.forEach(e => {\n            // let e = a.payload.doc.data();\n            e.date = (e === null || e === void 0 ? void 0 : e.date) != undefined ? e === null || e === void 0 ? void 0 : e.date.toDate() : e === null || e === void 0 ? void 0 : e.date;\n            this.dates.push(e === null || e === void 0 ? void 0 : e.date.toLocaleDateString('en-US'));\n          });\n          const results = Array.from(log.reduce((m, t) => m.set(t.date.toLocaleDateString('en-US'), t), new Map()).values());\n          this.logs = results ? results : [];\n        }\n      }); // this.time.getEmployeesTimesheet(id).subscribe((res: any) => {\n      //   this.end = res.length;\n      //   console.log(res);\n      //   if (res) {\n      //     const log = res ? res : [];\n      //     log.forEach((e: any) => {\n      //       e.date = e?.date != undefined ? e?.date.toDate() : e?.date;\n      //       this.dates.push(e?.date.toLocaleDateString('en-US'))\n      //     })\n      //     const result = Array.from(log.reduce((m: any, t: any) => m.set(t.date.toLocaleDateString('en-US'), t), new Map()).values());\n      //     this.logs = result ? result : [];\n      //     console.log(this.logs.length);\n      //   }\n      // })\n    }\n\n    next() {\n      this.pagination_click++;\n      const fooPosts = this.firestore.collection('timesheets').doc(this.myID).collection('SEP-2021', ref => ref.orderBy('date', 'desc').limit(4).startAfter(this.last_response)).valueChanges();\n      const barPosts = this.firestore.collection('timesheets').doc(this.myID).collection('AUG-2021', ref => ref.orderBy('date', 'desc').limit(4)).valueChanges();\n      const combi_query = combineLatest(fooPosts, barPosts).pipe(map(arr => arr.reduce((acc, cur) => acc.concat(cur))));\n      combi_query.subscribe(result => {\n        if (result) {\n          const log = result ? result : [];\n          this.first_response = log[0];\n          this.last_response = log[log.length - 1];\n          this.pagination_click++;\n          log.forEach(e => {\n            console.log(e); // let e = a.payload.doc.data();\n            // e.date = e?.date != undefined ? e?.date.toDate() : e?.date;\n            // this.dates.push(e?.date.toLocaleDateString('en-US'))\n          });\n          const results = Array.from(log.reduce((m, t) => m.set(t.date.toLocaleDateString('en-US'), t), new Map()).values());\n          this.logs = results ? results : [];\n        }\n      });\n    } // duplicate(arr: any) {\n    //   let counts = [];\n    //   let props = [];\n    //   for (let i = 0; i < arr.length; i++) {\n    //     if (counts[arr[i]]) {\n    //       counts[arr[i]] += 1\n    //     } else {\n    //       counts[arr[i]] = 1\n    //     }\n    //   }\n    //   for (let prop in counts) {\n    //     if (counts[prop] >= 2) {\n    //       // prop + \" counted: \" + counts[prop] + \" times.\";\n    //       props.push(prop);\n    //     }\n    //   }\n    //   return props;\n    //   // return counts;\n    //   //  ======== Filtered Duplicate ============= //\n    //   // const mySet = new Set(this.dates);\n    //   // this.dates = [...mySet];\n    // }\n\n\n    timesheetDialog(view, data) {\n      const dialogRef = this.dialog.open(TimesheetsDialogComponent, {\n        width: this.dialogWeightSize,\n        height: this.dialogHeightSize,\n        maxWidth: this.dialogMaxWeightSize,\n        disableClose: true,\n        data: {\n          view: view,\n          data: data\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 'success') {\n          this.snack('Timesheet logged successfully!', 'X', 'green-snackbar');\n          this.logs = [];\n          this.getTimesheets(this.myID);\n        } else if (result === 'failed') {\n          this.snack('Timesheet logged failed!', 'X', 'red-snackbar');\n        }\n      });\n    }\n\n    snack(m, a, c) {\n      this.sett.snackbar(m, a, 2000, c);\n    }\n\n  }\n\n  TimesheetsComponent.ɵfac = function TimesheetsComponent_Factory(t) {\n    return new (t || TimesheetsComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MainService), i0.ɵɵdirectiveInject(i3.SettingsService), i0.ɵɵdirectiveInject(i4.TimesheetService), i0.ɵɵdirectiveInject(i5.BreakpointObserver), i0.ɵɵdirectiveInject(i6.AngularFirestore));\n  };\n\n  TimesheetsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimesheetsComponent,\n    selectors: [[\"app-timesheets\"]],\n    decls: 25,\n    vars: 1,\n    consts: [[\"fxLayout\", \"column\", 1, \"timesheet__wrapper\"], [\"fxLayout\", \"row\", 1, \"timesheet__header\"], [1, \"page-title\"], [\"fxFlex\", \"\"], [\"mat-button\", \"\", 1, \"medial-button\", \"timesheet__button\", 3, \"click\"], [\"fxLayout\", \"column\", 1, \"timesheet__list\"], [\"fxLayout\", \"row\", 1, \"timesheet__list-header\"], [\"fxFlex\", \"20\"], [\"fxFlex\", \"30\"], [\"fxLayoutAlign\", \"start end\", \"fxFlex\", \"10\"], [\"dense\", \"\", \"fxLayout\", \"row\", \"class\", \"timesheet__list-content\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"dense\", \"\", \"fxLayout\", \"row\", 1, \"timesheet__list-footer\"], [\"mat-button\", \"\", 3, \"click\"], [\"dense\", \"\", \"fxLayout\", \"row\", 1, \"timesheet__list-content\", 3, \"click\"]],\n    template: function TimesheetsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Timesheet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 3);\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TimesheetsComponent_Template_button_click_5_listener() {\n          return ctx.timesheetDialog(\"add\", \"\");\n        });\n        i0.ɵɵtext(6, \"Add Timesheet \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"mat-list\", 6);\n        i0.ɵɵelementStart(9, \"mat-list-item\", 7);\n        i0.ɵɵtext(10, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-list-item\", 3);\n        i0.ɵɵtext(12, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-list-item\", 8);\n        i0.ɵɵtext(14, \"Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-list-item\", 9);\n        i0.ɵɵtext(16, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, TimesheetsComponent_mat_list_17_Template, 10, 7, \"mat-list\", 10);\n        i0.ɵɵelementStart(18, \"mat-list\", 11);\n        i0.ɵɵelement(19, \"mat-list-item\");\n        i0.ɵɵelement(20, \"mat-list-item\");\n        i0.ɵɵelement(21, \"mat-list-item\");\n        i0.ɵɵelementStart(22, \"mat-list-item\");\n        i0.ɵɵelementStart(23, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function TimesheetsComponent_Template_button_click_23_listener() {\n          return ctx.next();\n        });\n        i0.ɵɵtext(24, \"Next\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logs);\n      }\n    },\n    directives: [i7.DefaultLayoutDirective, i7.DefaultFlexDirective, i8.MatButton, i9.MatList, i9.MatListItem, i7.DefaultLayoutAlignDirective, i10.NgForOf],\n    pipes: [i10.DatePipe],\n    styles: [\".timesheet__header[_ngcontent-%COMP%]{padding:25px}.timesheet__list[_ngcontent-%COMP%]{padding:20px}.timesheet__list-header[_ngcontent-%COMP%]{background:#349b9e82;border-radius:8px 8px 0 0}.timesheet__list-footer[_ngcontent-%COMP%]{background:#b0b0b042;border-radius:0 0 8px 8px}.timesheet__list-content[_ngcontent-%COMP%]:hover{background:#e7e7e78c;cursor:pointer}.timesheet__list-content[_ngcontent-%COMP%]{border-right:1px solid #e7e7e7;border-left:1px solid #e7e7e7;padding-top:13px}.timesheet__button[_ngcontent-%COMP%]{padding:4px 35px}\"]\n  });\n  return TimesheetsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}