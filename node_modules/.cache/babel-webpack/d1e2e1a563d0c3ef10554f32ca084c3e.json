{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nimport * as i3 from \"../services/main.service\";\nexport let UserGuard = /*#__PURE__*/(() => {\n  class UserGuard {\n    constructor(router, authService, main) {\n      this.router = router;\n      this.authService = authService;\n      this.main = main;\n    }\n\n    canActivate(route, state) {\n      const url = state.url;\n      return this.isLoggedIn(url);\n    }\n\n    canActivateChild(route, state) {\n      return this.canActivate(route, state);\n    }\n\n    isLoggedIn(url) {\n      if (localStorage.length > 0 && localStorage.getItem('collection-id')) {\n        this.user = new Object(localStorage.getItem('user')).toString();\n        let role = JSON.parse(this.user).re;\n        let role_dec = this.main.decrypt(role ? role : '', 'r0l3_3nc');\n        const logged_in = role_dec.toLowerCase();\n\n        if (logged_in === 'user') {\n          this.authService.isLoggedIn = true;\n          return true;\n        }\n      }\n\n      this.authService.isLoggedIn = false;\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n  UserGuard.ɵfac = function UserGuard_Factory(t) {\n    return new (t || UserGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService), i0.ɵɵinject(i3.MainService));\n  };\n\n  UserGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserGuard,\n    factory: UserGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return UserGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}