{"ast":null,"code":"import { combineLatest } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@angular/common/http\";\nexport let TimesheetService = /*#__PURE__*/(() => {\n  class TimesheetService {\n    constructor(firestore, http) {\n      this.firestore = firestore;\n      this.http = http;\n      this.yearNow = new Date().getFullYear();\n      this.monthNow = new Date().toLocaleString('en-us', {\n        month: 'short'\n      });\n      this.time = 'timesheets';\n    }\n\n    getEmployeesTimesheets() {}\n\n    getEmployeesTimesheet(id) {\n      const fooPosts = this.firestore.collection(this.time).doc(id).collection('SEP-2021', ref => ref.orderBy('date', 'desc').limit(4)).valueChanges();\n      const barPosts = this.firestore.collection(this.time).doc(id).collection('AUG-2021', ref => ref.orderBy('date', 'desc').limit(4)).valueChanges();\n      return combineLatest(fooPosts, barPosts).pipe(map(arr => arr.reduce((acc, cur) => acc.concat(cur))));\n    }\n\n    getTimesheetByDate(id, date, sub_collection) {\n      return this.firestore.collection(this.time).doc(id).collection(sub_collection, ref => ref.where('date', \"==\", date)).snapshotChanges();\n    }\n\n    addEmployeesTimesheet(id, second_data, sub_collection) {\n      let batch = this.firestore.firestore.batch(); // const first_data = {\n      //   total_days_present: 15,\n      //   current_month: 'SEPT'\n      // }\n      // const add_main_collection = this.firestore.collection(this.time).doc(id).ref;\n      // batch.set(add_main_collection, first_data);\n\n      const sub_main_collection = this.firestore.collection(this.time).doc(id).collection(sub_collection).doc().ref;\n      batch.set(sub_main_collection, second_data);\n      return batch.commit();\n    }\n\n    updateEmployeesTimesheet(id, second_data, sub_collection, doc_id) {\n      let batch = this.firestore.firestore.batch();\n      const sub_main_collection = this.firestore.collection(this.time).doc(id).collection(sub_collection).doc(doc_id).ref;\n      batch.update(sub_main_collection, second_data);\n      return batch.commit();\n    }\n\n    removeEmployeesTimesheet(id, sub_collection, doc_id) {\n      return this.firestore.collection(this.time).doc(id).collection(sub_collection).doc(doc_id).delete();\n    }\n\n  }\n\n  TimesheetService.ɵfac = function TimesheetService_Factory(t) {\n    return new (t || TimesheetService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  TimesheetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimesheetService,\n    factory: TimesheetService.ɵfac,\n    providedIn: 'root'\n  });\n  return TimesheetService;\n})();","map":null,"metadata":{},"sourceType":"module"}