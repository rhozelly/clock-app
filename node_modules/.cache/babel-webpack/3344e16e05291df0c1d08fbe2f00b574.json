{"ast":null,"code":"import { Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/authentication.service\";\nimport * as i2 from \"../core/services/main.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/cdk/layout\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(authService, mainService, router, breakpointObserver) {\n      this.authService = authService;\n      this.mainService = mainService;\n      this.router = router;\n      this.breakpointObserver = breakpointObserver;\n      this.navs = [{\n        name: 'Dashboard',\n        icon: 'dashboard_icon'\n      }, {\n        name: 'Employees',\n        icon: 'member_icon_blue'\n      }, {\n        name: 'Timesheets',\n        icon: 'timesheet_icon'\n      }, {\n        name: 'Attendance',\n        icon: 'attendance_icon'\n      }, {\n        name: 'Calendar',\n        icon: 'calendar_icon'\n      }];\n      this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    }\n\n    ngOnInit() {\n      this.mainService.getNavigators().subscribe(res => {\n        this.navigators = res ? res : [];\n      });\n    }\n\n    logOut() {\n      localStorage.clear();\n      this.authService.logout();\n    }\n\n    selectedNav(selected) {\n      this.router.navigate([selected]);\n    }\n\n    openProfile() {\n      this.router.navigate(['my-profile']);\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.MainService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.BreakpointObserver));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Dashboard\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".sidenav-container[_ngcontent-%COMP%]{height:100%}.sidenav[_ngcontent-%COMP%]{width:230px;background:#efefef}.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]{background:inherit}.mat-toolbar.mat-primary[_ngcontent-%COMP%]{position:sticky;top:0;z-index:1}.logo-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:180px;padding:35px 0 30px}.sidenav-texts[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#349b9e;font-weight:500;transition:.5s;font-size:18px;text-transform:uppercase;margin-top:10px}.sidenav-texts[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background:#ea8722;color:#fff;font-weight:500}.top-right__header-wrapper[_ngcontent-%COMP%]{padding:20px}.welcome[_ngcontent-%COMP%]{font-size:20px;margin:5px;padding:0 22px}.top-header[_ngcontent-%COMP%]{box-shadow:0 1px 1px #80808026}.icon-sidenav__wrapper[_ngcontent-%COMP%]{width:40px;margin-right:10px}.sidenav-settings[_ngcontent-%COMP%]{position:absolute;bottom:20px;left:20px;width:46px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}