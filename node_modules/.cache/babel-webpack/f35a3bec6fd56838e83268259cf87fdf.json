{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../core/services/attendance.service\";\nimport * as i5 from \"../core/services/settings.service\";\nimport * as i6 from \"../core/services/main.service\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction AttendanceComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(\"You timed in \" + ctx_r0.displayMomentAgo);\n  }\n}\n\nfunction AttendanceComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(\"Do you wanna clock out?\");\n  }\n}\n\nfunction AttendanceComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_div_14_Template_mat_form_field_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.code = $event;\n    })(\"ngModelChange\", function AttendanceComponent_div_14_Template_mat_form_field_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.checkCode();\n    });\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.code);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"maxLength\", ctx_r2.lengthCode);\n  }\n}\n\nfunction AttendanceComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AttendanceComponent_div_15_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.cancelClockOut();\n    });\n    i0.ɵɵtext(2, \"NOPE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 18);\n    i0.ɵɵelementStart(4, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AttendanceComponent_div_15_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.timeOut();\n    });\n    i0.ɵɵtext(5, \"Clock Out!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AttendanceComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Already logged in.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AttendanceComponent = /*#__PURE__*/(() => {\n  class AttendanceComponent {\n    constructor(fb, router, sb, attService, sett, main) {\n      this.fb = fb;\n      this.router = router;\n      this.sb = sb;\n      this.attService = attService;\n      this.sett = sett;\n      this.main = main;\n      this.dateToday = new Date();\n      this.yearNow = new Date().getFullYear();\n      this.monthNow = new Date().toLocaleString('en-us', {\n        month: 'short'\n      });\n      this.lengthCode = 8;\n      this.date = ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + new Date().getDate() + '-' + new Date().getFullYear();\n      this.formId = this.fb.group({\n        id: ['', null]\n      });\n      this.code = [];\n      this.attendanceDate = false;\n      this.alreadyLoggedIn = false;\n      this.displayMomentAgo = [];\n    }\n\n    ngOnInit() {\n      this.secondCollection = this.yearNow + '-' + this.monthNow.toUpperCase();\n      this.checkAttendance(this.myID, this.secondCollection);\n      this.formId.controls['id'].valueChanges.subscribe(input => {\n        if (this.formId.controls['id'].value.length === 8) {\n          this.checkAccId(input);\n        }\n      });\n    }\n\n    checkAttendance(id, subcollection) {\n      this.attService.getAttendanceToday(id, subcollection).subscribe(results => {\n        results.map(result => {\n          const a = result.payload.doc.data().date_time.toDate();\n          const timeout = result.payload.doc.data().time_out;\n          this.currentDocumentID = result.payload.doc.id;\n          const latestAttendanceStored = this.formatDate(a);\n          this.attendanceDate = latestAttendanceStored === this.date;\n\n          if (this.attendanceDate) {\n            this.displayMomentAgo = moment(new Date(result.payload.doc.data().date_time.toDate())).fromNow();\n            this.alreadyLoggedIn = timeout.length > 0;\n          } else {\n            this.alreadyLoggedIn = false;\n            this.displayMomentAgo = [];\n          }\n        });\n      });\n    }\n\n    formatDate(date) {\n      return ('0' + (new Date(date).getMonth() + 1)).slice(-2) + '-' + new Date(date).getDate() + '-' + new Date(date).getFullYear();\n    }\n\n    checkCode() {\n      if (this.code.length >= this.lengthCode) {\n        const sub = this.yearNow + '-' + this.monthNow;\n        this.attService.checkSubCollectionAttendance(this.code, sub.toUpperCase()).subscribe(queryShot => {\n          if (queryShot.docs.length > 0) {\n            this.checkFieldDateAttendance(this.code, sub.toUpperCase());\n          } else {\n            this.openSnackBar('ID DOES NOT EXIST', 'x', 'red-snackbar');\n          }\n        });\n      }\n    }\n\n    checkFieldDateAttendance(id, sub) {\n      // const clock_in = moment(new Date()).format(\"h:mm A\");\n      const clock_in = new Date();\n      const date_today = new Date().toLocaleDateString('sv-SE');\n      this.attService.checkFieldDateAttendance(id, sub, date_today).subscribe(result => {\n        if (result.length > 0) {\n          const value = result[0];\n          const day_value = value.payload.doc.data().date_time.toDate().getDate();\n          const timeout = value.payload.doc.data().time_out;\n          this.currentDocumentID = value.payload.doc.id;\n\n          if (day_value === new Date().getDate()) {\n            if (timeout.length > 0) {\n              this.attendanceDate = false;\n              this.displayMomentAgo = '';\n              this.openSnackBar('Already clocked out!', 'X', 'red-snackbar');\n            } else {\n              this.displayMomentAgo = moment(new Date(value.payload.doc.data().date_time.toDate())).fromNow();\n              this.attendanceDate = true;\n            }\n          } else {\n            this.attService.addAttendance(id, this.secondCollection, clock_in, new Date()).then(resolved => {\n              if (resolved.id) {\n                this.openSnackBar('Timed in!', 'X', 'green-snackbar');\n                this.attService.updateRecentDate(this.dateToday, resolved.id, id).then(resolveRecent => {}).catch(errorRecent => {});\n              }\n            }).catch(error => {\n              this.openSnackBar('Something went wrong!', 'X', 'red-snackbar');\n            });\n          }\n        } else {\n          this.attService.addAttendance(id, this.secondCollection, clock_in, new Date()).then(resolved => {\n            if (resolved.id) {\n              this.openSnackBar('Timed in!', 'X', 'green-snackbar');\n              this.attService.updateRecentDate(this.dateToday, resolved.id, id).then(resolveRecent => {}).catch(errorRecent => {});\n            }\n          }).catch(error => {\n            this.openSnackBar('Something went wrong!', 'X', 'red-snackbar');\n          });\n        }\n      });\n    }\n\n    cancelClockOut() {\n      this.attendanceDate = false;\n      this.displayMomentAgo = '';\n    }\n\n    checkAccId(input) {\n      this.sett.checkAccID(input).subscribe((res = null) => {\n        if (res !== null) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.openSnackBar('ID does not match!', 'ok', 'red-snackbar');\n        }\n\n        this.formId.controls['id'].setValue('');\n      });\n    }\n\n    timeOut() {\n      // const timeout = moment(new Date()).format(\"h:mm A\");\n      const timeout = new Date();\n      this.attService.timeout(this.code, this.secondCollection, this.currentDocumentID, timeout).then(resolve => {\n        this.openSnackBar('Successful time out!', 'X', 'green-snackbar');\n      }).catch(error => {\n        this.openSnackBar('Something went wrong!', 'X', 'red-snackbar');\n      });\n    }\n\n    openSnackBar(message, action, c) {\n      this.sb.open(message, action, {\n        duration: 2500,\n        panelClass: c\n      });\n    }\n\n  }\n\n  AttendanceComponent.ɵfac = function AttendanceComponent_Factory(t) {\n    return new (t || AttendanceComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.AttendanceService), i0.ɵɵdirectiveInject(i5.SettingsService), i0.ɵɵdirectiveInject(i6.MainService));\n  };\n\n  AttendanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttendanceComponent,\n    selectors: [[\"app-attendance\"]],\n    decls: 18,\n    vars: 13,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"attendance__main-wrapper\"], [\"fxLayout\", \"row\", 1, \"attendance__first-section\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"attendance__title\"], [1, \"attendance__time\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"attendance__form\"], [\"class\", \"display-time-ago\", 4, \"ngIf\"], [\"class\", \"display-phrase\", 4, \"ngIf\"], [1, \"attendance__separator\"], [\"fxLayout\", \"column\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"25px\", 4, \"ngIf\"], [\"fxLayout\", \"row\"], [1, \"display-time-ago\"], [1, \"display-phrase\"], [\"fxLayout\", \"column\"], [\"color\", \"warn\", \"appearance\", \"outline\", \"ngDefaultControl\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", 3, \"maxLength\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"25px\"], [\"mat-button\", \"\", 1, \"cancel__button\", 3, \"click\"], [\"fxFlex\", \"\"], [\"mat-button\", \"\", 1, \"clock-out__button\", 3, \"click\"]],\n    template: function AttendanceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\", 3);\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵtemplate(10, AttendanceComponent_span_10_Template, 2, 1, \"span\", 5);\n        i0.ɵɵtemplate(11, AttendanceComponent_span_11_Template, 2, 1, \"span\", 6);\n        i0.ɵɵelementStart(12, \"div\");\n        i0.ɵɵelement(13, \"div\", 7);\n        i0.ɵɵtemplate(14, AttendanceComponent_div_14_Template, 5, 2, \"div\", 8);\n        i0.ɵɵtemplate(15, AttendanceComponent_div_15_Template, 6, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AttendanceComponent_div_16_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"div\", 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 7, ctx.dateToday, \"fullDate\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 10, ctx.dateToday, \"shortTime\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMomentAgo.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMomentAgo.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.attendanceDate == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.attendanceDate == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.alreadyLoggedIn === true);\n      }\n    },\n    directives: [i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i8.NgIf, i9.MatFormField, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i9.MatLabel, i10.MatInput, i7.DefaultLayoutGapDirective, i11.MatButton, i7.DefaultFlexDirective],\n    pipes: [i8.DatePipe],\n    styles: [\".image-logo__wrapper[_ngcontent-%COMP%]{width:500px;padding:120px}.form-attendance__form-field[_ngcontent-%COMP%]{font-size:20px;width:500px;color:#ea7d0e}.form-attendance__input[_ngcontent-%COMP%]{padding:20px 40px;font-size:20px;border-radius:6px;background:#ea7d0e;color:#000;border:0}.form-attendance__input[_ngcontent-%COMP%]:focus{outline:none}.attendance__main-wrapper[_ngcontent-%COMP%]{height:100vh;background:#ea7d0e}.attendance__first-section[_ngcontent-%COMP%]{background:#151515;height:50%;width:100%;position:absolute;top:0;display:flex;justify-content:center;align-content:center;color:#fff}.attendance__form[_ngcontent-%COMP%]{padding:12px;background:#fff;height:250px;width:400px;border-radius:5px;margin-top:20%;position:relative;overflow:hidden;box-shadow:-1px 2px 10px 0 #1d1d1d4a}.attendance__separator[_ngcontent-%COMP%]{padding:9px;background:#ea7d0e;position:absolute;width:100%;top:0;left:0}.check-in__button[_ngcontent-%COMP%]{padding:21px 0;background:#ea7d0e;font-weight:600;width:250px;margin-top:15px}.attendance__title[_ngcontent-%COMP%]{position:absolute;top:40%}.attendance__title[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:36px;padding:10px}.attendance__time[_ngcontent-%COMP%]{margin:25px;border:1px solid #fff;border-radius:5px;padding:15px}.attendance__form[_ngcontent-%COMP%], .mat-form-field-invalid[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%], .mat-form-field.mat-warn[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]{color:#000}.display-time-ago[_ngcontent-%COMP%]{position:absolute;top:41px;font-size:17px}.display-phrase[_ngcontent-%COMP%]{position:absolute;top:60px;font-size:17px}.clock-out__button[_ngcontent-%COMP%]{padding:18px 40px;background:#ea7d0e;color:#fff;font-weight:600}.cancel__button[_ngcontent-%COMP%]{padding:18px 40px;background:#0000001f;color:#000;font-weight:600}\"]\n  });\n  return AttendanceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}