{"ast":null,"code":"import { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Validators } from \"@angular/forms\";\nimport { AlertMessageComponent } from \"../../alert-message/alert-message.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../core/services/main.service\";\nimport * as i4 from \"../../core/services/timesheet.service\";\nimport * as i5 from \"../../core/services/settings.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/datepicker\";\nimport * as i13 from \"@angular/material/select\";\nimport * as i14 from \"@angular/material/core\";\n\nfunction TimesheetsDialogComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Add Timesheet\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimesheetsDialogComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Edit Timesheet\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimesheetsDialogComponent_mat_hint_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 18);\n    i0.ɵɵtext(1, \" Invalid Date. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimesheetsDialogComponent_div_19_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const client_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", client_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(client_r9);\n  }\n}\n\nfunction TimesheetsDialogComponent_div_19_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function TimesheetsDialogComponent_div_19_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const i_r6 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.removeItem(i_r6);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"remove_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimesheetsDialogComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelementStart(3, \"mat-form-field\", 22);\n    i0.ɵɵelementStart(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Project\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-select\", 23);\n    i0.ɵɵtemplate(7, TimesheetsDialogComponent_div_19_mat_option_7_Template, 2, 2, \"mat-option\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"textarea\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 21);\n    i0.ɵɵtemplate(17, TimesheetsDialogComponent_div_19_button_17_Template, 3, 0, \"button\", 29);\n    i0.ɵɵelementStart(18, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function TimesheetsDialogComponent_div_19_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.addItem();\n    });\n    i0.ɵɵelementStart(19, \"mat-icon\");\n    i0.ɵɵtext(20, \"add_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.clients);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n  }\n}\n\nexport let TimesheetsDialogComponent = /*#__PURE__*/(() => {\n  class TimesheetsDialogComponent {\n    constructor(dialogRef, timesheet, dialog, fb, main, time, sett) {\n      this.dialogRef = dialogRef;\n      this.timesheet = timesheet;\n      this.dialog = dialog;\n      this.fb = fb;\n      this.main = main;\n      this.time = time;\n      this.sett = sett;\n      this.clients = [];\n      this.myID = '';\n      this.disableButton = false;\n      this.currentProjects = [];\n      this.projectDocumentId = [];\n      this.timesheetForm = this.fb.group({\n        date: ['', Validators.required],\n        updated_at: [new Date()],\n        items: this.fb.array([this.createProjects()])\n      });\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.getClientsList();\n      const collection_id = localStorage.getItem('collection-id');\n      this.myID = this.main.decrypt(collection_id, 'collection-id');\n\n      if (this.timesheet.view === 'add') {} else if (this.timesheet.view === 'update') {\n        const to_search_date = this.timesheet.data.date;\n        const to_search_sub_collection = this.timesheet.data.date.toLocaleString('en-us', {\n          month: 'short'\n        }).toUpperCase() + '-' + this.timesheet.data.date.getFullYear();\n        (_a = this.timesheetForm.get('date')) === null || _a === void 0 ? void 0 : _a.setValue(to_search_date);\n        this.getTimesheetByDate(this.myID, to_search_date, to_search_sub_collection);\n      } else {}\n    }\n\n    getTimesheetByDate(id, date, sub_collection) {\n      this.time.getTimesheetByDate(id, date, sub_collection).subscribe(result => {\n        this.projects.removeAt(this.projects.length - 1);\n        this.currentProjects = [];\n        this.currentProjects = result ? result : [];\n        this.projects.clear();\n\n        if (result) {\n          this.countProjects(result);\n        }\n      });\n    } //  =======  Crud Function ======= //\n\n\n    actionTimesheet() {\n      var _a, _b, _c, _d, _e;\n\n      if (this.timesheet.view === 'add') {\n        if (this.timesheetForm.valid && ((_a = this.timesheetForm.get('items')) === null || _a === void 0 ? void 0 : _a.valid)) {\n          this.disableButton = true;\n          let second_data;\n          (_b = this.timesheetForm.get('items')) === null || _b === void 0 ? void 0 : _b.value.forEach(val => {\n            var _a, _b;\n\n            second_data = {\n              project: val.project,\n              desc: val.desc,\n              date: (_a = this.timesheetForm.get('date')) === null || _a === void 0 ? void 0 : _a.value,\n              time: val.time,\n              updated_at: new Date()\n            };\n            const sub_collection = second_data.date.toLocaleString('en-us', {\n              month: 'short'\n            }) + '-' + ((_b = this.timesheetForm.get('date')) === null || _b === void 0 ? void 0 : _b.value.getFullYear());\n            this.time.addEmployeesTimesheet(this.myID, second_data, sub_collection.toUpperCase()).then(res => {\n              this.dialogRef.close('success');\n            }).catch(error => {\n              this.dialogRef.close('failed');\n            });\n          });\n        } else {\n          this.snack('All fields are required', 'X', 'red-snackbar');\n          this.disableButton = false;\n        }\n      } else if (this.timesheet.view === 'update') {\n        const sub_collection = (_c = this.timesheetForm.get('date')) === null || _c === void 0 ? void 0 : _c.value;\n        const collection = sub_collection.toLocaleString('en-us', {\n          month: 'short'\n        }).toUpperCase() + '-' + sub_collection.getFullYear();\n        const array = ((_d = this.timesheetForm.get('items')) === null || _d === void 0 ? void 0 : _d.value) ? (_e = this.timesheetForm.get('items')) === null || _e === void 0 ? void 0 : _e.value : [];\n        this.projects.clear();\n        array.forEach((e, i) => {\n          this.time.updateEmployeesTimesheet(this.myID, e, collection, this.projectDocumentId[i]).then(resolve => {\n            this.dialogRef.close('success');\n            this.snack('Timesheet log updated!', 'X', 'green-snackbar');\n          }).catch(error => {\n            console.log('error:: ', error);\n            this.dialogRef.close('failed');\n            this.snack('Timesheet log update failed!', 'X', 'red-snackbar');\n          });\n        });\n      }\n    }\n\n    removeProject() {\n      const dialogRef = this.dialog.open(AlertMessageComponent, {\n        disableClose: true,\n        data: {\n          action: 'timesheet',\n          data: 'delete'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        var _a, _b, _c, _d;\n\n        if (result === 'yes') {\n          const items = ((_a = this.timesheetForm.get('items')) === null || _a === void 0 ? void 0 : _a.value) ? (_b = this.timesheetForm.get('items')) === null || _b === void 0 ? void 0 : _b.value : [];\n          const sub_collection = ((_c = this.timesheetForm.get('date')) === null || _c === void 0 ? void 0 : _c.value.toLocaleString('en-us', {\n            month: 'short'\n          })) + '-' + ((_d = this.timesheetForm.get('date')) === null || _d === void 0 ? void 0 : _d.value.getFullYear());\n          items.forEach((e, i) => {\n            this.time.removeEmployeesTimesheet(this.myID, sub_collection, this.projectDocumentId[i]).then(resolve => {\n              this.projects.clear();\n              this.dialogRef.close('success');\n              this.snack('Timesheet log deleted!', 'X', 'green-snackbar');\n            }).catch(error => {\n              console.log('error:: ', error);\n              this.dialogRef.close('failed');\n              this.snack('Timesheet log delete failed!', 'X', 'red-snackbar');\n            });\n          });\n        }\n      });\n    }\n\n    snack(m, a, c) {\n      this.sett.snackbar(m, a, 2000, c);\n    } //  =======  Array List ======= //\n\n\n    get projects() {\n      return this.timesheetForm.get('items');\n    }\n\n    createProjects() {\n      return this.fb.group({\n        time: ['', Validators.required],\n        desc: ['', Validators.required],\n        project: ['', Validators.required]\n      });\n    }\n\n    addItem() {\n      this.projects.push(this.createProjects());\n    }\n\n    removeItem(i) {\n      this.projects.removeAt(i);\n    }\n\n    countProjects(data) {\n      data.forEach(e => {\n        this.projectDocumentId.push(e.payload.doc.id);\n        this.patchProjects(e.payload.doc.data());\n      });\n    }\n\n    patchProjects(data) {\n      const control = this.timesheetForm.get('items');\n      control.push(this.projectsRows(data));\n    }\n\n    projectsRows(data) {\n      return this.fb.group({\n        time: [data.time],\n        desc: [data.desc],\n        project: [data.project]\n      });\n    }\n\n    getClientsList() {\n      this.main.getClients().subscribe(result => {\n        this.clients = result ? result.clients : [];\n      });\n    }\n\n  }\n\n  TimesheetsDialogComponent.ɵfac = function TimesheetsDialogComponent_Factory(t) {\n    return new (t || TimesheetsDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MainService), i0.ɵɵdirectiveInject(i4.TimesheetService), i0.ɵɵdirectiveInject(i5.SettingsService));\n  };\n\n  TimesheetsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimesheetsDialogComponent,\n    selectors: [[\"app-timesheets-dialog\"]],\n    decls: 25,\n    vars: 8,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"dialog__title-header\"], [4, \"ngIf\"], [\"fxFlex\", \"\"], [\"mat-icon-button\", \"\", 1, \"dialog__title-button\", 3, \"click\"], [\"mat-dialog-content\", \"\", \"fxLayout\", \"column\", 3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"10px\"], [\"floatLabel\", \"always\", \"appearance\", \"outline\", 1, \"dialog__disabled-button\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"disabled\", \"false\"], [\"dp3\", \"\"], [\"class\", \"error-hint\", 4, \"ngIf\"], [1, \"array__list-wrapper\"], [\"fxLayout\", \"column\", \"formArrayName\", \"items\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", \"fxLayoutAlign\", \"end end\", 1, \"dialog__action-wrapper\"], [\"mat-button\", \"\", 1, \"medial-button\", 3, \"click\"], [\"fxFlex\", \"30\", \"mat-button\", \"\", 1, \"primary-button\", 3, \"disabled\", \"click\"], [1, \"error-hint\"], [\"fxLayout\", \"column\", \"formArrayName\", \"items\"], [\"fxLayout\", \"row wrap\", \"fxLayoutGap\", \"10px\", \"fxFlex\", \"\", 3, \"formGroupName\"], [\"fxLayout\", \"column\"], [\"appearance\", \"outline\"], [\"formControlName\", \"project\"], [\"class\", \"selection__list\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 1, \"timesheet__time-field\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"time\", \"placeholder\", \"Ex: 8 or 8.5\"], [\"appearance\", \"outline\", \"fxFlex\", \"\", 1, \"timesheet_desc\"], [\"matInput\", \"\", \"formControlName\", \"desc\", \"placeholder\", \"Description\"], [\"mat-icon-button\", \"\", \"class\", \"circle__remove\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 1, \"circle__add\", 3, \"click\"], [1, \"selection__list\", 3, \"value\"], [\"mat-icon-button\", \"\", 1, \"circle__remove\", 3, \"click\"]],\n    template: function TimesheetsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtemplate(1, TimesheetsDialogComponent_span_1_Template, 2, 0, \"span\", 1);\n        i0.ɵɵtemplate(2, TimesheetsDialogComponent_span_2_Template, 2, 0, \"span\", 1);\n        i0.ɵɵelement(3, \"span\", 2);\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TimesheetsDialogComponent_Template_button_click_4_listener() {\n          return ctx.dialogRef.close(\"close\");\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelement(14, \"mat-datepicker-toggle\", 9);\n        i0.ɵɵelement(15, \"mat-datepicker\", 10, 11);\n        i0.ɵɵtemplate(17, TimesheetsDialogComponent_mat_hint_17_Template, 2, 0, \"mat-hint\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵtemplate(19, TimesheetsDialogComponent_div_19_Template, 21, 3, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵelementStart(21, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function TimesheetsDialogComponent_Template_button_click_21_listener() {\n          return ctx.removeProject();\n        });\n        i0.ɵɵtext(22, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function TimesheetsDialogComponent_Template_button_click_23_listener() {\n          return ctx.actionTimesheet();\n        });\n        i0.ɵɵtext(24, \" Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(16);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.timesheet.view === \"add\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.timesheet.view === \"update\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.timesheetForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.timesheetForm.controls.date == null ? null : ctx.timesheetForm.controls.date.valid) && (ctx.timesheetForm.controls.date == null ? null : ctx.timesheetForm.controls.date.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects.controls);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.disableButton);\n      }\n    },\n    directives: [i1.MatDialogTitle, i6.NgIf, i7.DefaultFlexDirective, i8.MatButton, i9.MatIcon, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i1.MatDialogContent, i7.DefaultLayoutDirective, i2.FormGroupDirective, i7.DefaultLayoutAlignDirective, i7.DefaultLayoutGapDirective, i10.MatFormField, i10.MatLabel, i11.MatInput, i2.DefaultValueAccessor, i12.MatDatepickerInput, i2.NgControlStatus, i2.FormControlName, i12.MatDatepickerToggle, i10.MatSuffix, i12.MatDatepicker, i6.NgForOf, i1.MatDialogActions, i10.MatHint, i2.FormArrayName, i2.FormGroupName, i13.MatSelect, i2.NumberValueAccessor, i14.MatOption],\n    styles: [\".dialog__title-header[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}.dialog__title-button[_ngcontent-%COMP%]{margin-top:-5px}.dialog__disabled-button[_ngcontent-%COMP%]   .mat-form-field-appearance-outline.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-form-field-outline[_ngcontent-%COMP%]{color:#ec8924!important}.selection__list[_ngcontent-%COMP%]{text-transform:capitalize}.timesheet__time-field[_ngcontent-%COMP%]{margin-top:-16px}.mat-form-field[_ngcontent-%COMP%]   .timesheet__desc[_ngcontent-%COMP%]{margin-top:-48px!important}.timesheet_desc[_ngcontent-%COMP%]   textarea.mat-input-element[_ngcontent-%COMP%]{height:77px;resize:none}.circle__remove[_ngcontent-%COMP%]{color:#e05d5d}.circle__add[_ngcontent-%COMP%]{color:#4aa96c}.array__list-wrapper[_ngcontent-%COMP%]{height:420px}.dialog__action-wrapper[_ngcontent-%COMP%]{padding-top:12px}\"]\n  });\n  return TimesheetsDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}