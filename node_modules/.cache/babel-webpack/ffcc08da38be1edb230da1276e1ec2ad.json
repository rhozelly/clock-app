{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/main.service\";\nimport * as i2 from \"../core/services/profile.service\";\nimport * as i3 from \"@angular/fire/storage\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/progress-bar\";\nimport * as i10 from \"@angular/material/tabs\";\nimport * as i11 from \"@angular/material/toolbar\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@angular/material/expansion\";\nimport * as i17 from \"@angular/material/icon\";\nimport * as i18 from \"@angular/material/list\";\nimport * as i19 from \"@angular/material/core\";\n\nfunction ProfileComponent_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const blood_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", blood_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", blood_r3, \" \");\n  }\n}\n\nfunction ProfileComponent_div_103_mat_list_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"div\", 32);\n    i0.ɵɵelementStart(2, \"a\", 38);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const inv_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", inv_r6.value, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", inv_r6.key, \" \");\n  }\n}\n\nfunction ProfileComponent_div_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-expansion-panel\");\n    i0.ɵɵelementStart(2, \"mat-expansion-panel-header\");\n    i0.ɵɵelementStart(3, \"mat-panel-title\", 28);\n    i0.ɵɵelementStart(4, \"mat-icon\", 37);\n    i0.ɵɵtext(5, \"paid\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-panel-description\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-list\", 30);\n    i0.ɵɵtemplate(9, ProfileComponent_div_103_mat_list_item_9_Template, 4, 2, \"mat-list-item\", 35);\n    i0.ɵɵpipe(10, \"keyvalue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const invoices_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate2(\" \", invoices_r4.id, \" - \", ctx_r2.yearNow, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 3, invoices_r4.data));\n  }\n}\n\nconst _c0 = function () {\n  return [];\n};\n\nexport class ProfileComponent {\n  constructor(mainService, profileService, storage, sanitizer, fb) {\n    this.mainService = mainService;\n    this.profileService = profileService;\n    this.storage = storage;\n    this.sanitizer = sanitizer;\n    this.fb = fb;\n    this.defaultProfileImage = [];\n    this.dataImage = [];\n    this.files = [];\n    this.invoices = [];\n    this.invoicesGrouped = [];\n    this.yearNow = new Date().getFullYear();\n    this.bloodTypes = [];\n    this.profiles = [];\n    this.profileFormGroup = this.fb.group({\n      first_name: [\"\"],\n      last_name: [\"\"],\n      contact_no: [\"\"],\n      blood_type: [\"\"],\n      address: [\"\"],\n      email_add: [\"\"],\n      emergency_contact: [\"\"],\n      emergency_name: [\"\"]\n    });\n  }\n\n  ngOnInit() {\n    const collection_id = localStorage.getItem('collection-id');\n    this.myID = this.mainService.decrypt(collection_id, 'collection-id');\n    this.getUserProfile();\n    this.getBloodTypes();\n    this.getInvoices();\n    this.defaultProfileImage = this.profileService.defaultImage();\n  }\n\n  getBloodTypes() {\n    this.mainService.getBloodType().subscribe(res => {\n      this.bloodTypes = res ? res.bloodtypes : [];\n    });\n  }\n\n  getInvoices() {\n    this.profileService.getInvoices(this.myID).subscribe(result => {\n      result.map(doc => {\n        const array = {\n          id: doc.payload.doc.id,\n          data: doc.payload.doc.data()\n        };\n        this.invoices = array;\n        this.invoicesGrouped.push(this.invoices);\n      });\n    });\n  }\n\n  getUserProfile() {\n    this.profileService.getUserProfile(this.myID).subscribe(res => {\n      res.profile_img = res.profile_img ? res.profile_img : this.defaultProfileImage;\n      this.profiles = res ? res : [];\n      this.files = this.profiles.files !== null ? this.profiles.files : null;\n      this.myBloodType = this.profiles.blood_type;\n      this.patchProfileData(this.profiles);\n    });\n  }\n\n  patchProfileData(data) {\n    this.profileFormGroup = this.fb.group({\n      first_name: data.first_name,\n      last_name: data.last_name,\n      contact_no: data.contact_no,\n      blood_type: data.blood_type,\n      address: data.address,\n      email_add: data.email_add,\n      emergency_contact: data.emergency_contact,\n      emergency_name: data.emergency_name\n    });\n  }\n\n  updateProfile() {\n    var _a;\n\n    (_a = this.profileFormGroup.get(\"blood_type\")) === null || _a === void 0 ? void 0 : _a.setValue(this.myBloodType);\n    this.profileService.updateProfile(this.profileFormGroup.value, this.myID).then(res => {});\n  }\n\n  onSelectFile(event) {\n    const filePath = 'profiles/' + this.myID + '-profile';\n    this.ref = this.storage.ref(filePath);\n    this.task = this.ref.put(event.target.files[0]);\n    this.uploadProgress = this.task.percentageChanges();\n    this.uploadState = this.task.snapshotChanges().pipe(map(s => s.state));\n    this.ref.getDownloadURL().subscribe(url => {\n      this.profileService.uploadImagesUrl(url, this.myID).then(res => {});\n    });\n  }\n\n}\n\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.MainService), i0.ɵɵdirectiveInject(i2.ProfileService), i0.ɵɵdirectiveInject(i3.AngularFireStorage), i0.ɵɵdirectiveInject(i4.DomSanitizer), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\n\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 104,\n  vars: 12,\n  consts: [[\"fxLayout\", \"row\"], [\"fxLayout\", \"column\"], [1, \"profile-image__wrapper\"], [\"loading\", \"lazy\", \"mat-card-image\", \"\", \"alt\", \"Profile Picture\", 1, \"profile-image\", 3, \"src\"], [\"hidden\", \"\", \"accept\", \"image/*\", \"type\", \"file\", 3, \"change\"], [\"inputFileUpdate\", \"\"], [1, \"upload-button__wrapper\"], [\"type\", \"button\", \"fxFlex\", \"\", \"mat-button\", \"\", 1, \"upload-button\", 3, \"click\"], [\"mode\", \"determinate\", 3, \"value\"], [\"fxFlex\", \"\"], [\"label\", \"Profile\"], [\"fxLayout\", \"row\", 3, \"formGroup\"], [\"fxLayout\", \"column\", 1, \"profile-form__wrapper\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"10px\"], [\"floatLabel\", \"always\", \"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"first_name\", \"placeholder\", \"First Name\"], [\"matInput\", \"\", \"formControlName\", \"last_name\", \"placeholder\", \"Last Name\"], [\"floatLabel\", \"always\", \"fxFlex\", \"\", \"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"address\", \"placeholder\", \"Address\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"contact_no\", \"placeholder\", \"Contact Number\"], [\"formControlName\", \"blood_type\", 3, \"value\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email_add\", \"placeholder\", \"Email Address\"], [\"matInput\", \"\", \"formControlName\", \"emergency_name\", \"placeholder\", \"Name\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"emergency_contact\", \"placeholder\", \"Contact Number\"], [\"fxFlex\", \"\", \"mat-button\", \"\", 1, \"primary-button\", 3, \"click\"], [\"label\", \"Files\"], [1, \"files__wrapper\"], [\"fxFlex\", \"20\"], [\"fxFlex\", \"30\"], [1, \"files__list\"], [\"target\", \"_blank\", 1, \"remove-decors\", 3, \"href\"], [\"mat-line\", \"\"], [\"mat-button\", \"\", 1, \"primary-button\"], [1, \"invoice__wrapper\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"blue\"], [3, \"href\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 4, 5);\n      i0.ɵɵlistener(\"change\", function ProfileComponent_Template_input_change_4_listener($event) {\n        return ctx.onSelectFile($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelementStart(7, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_7_listener() {\n        i0.ɵɵrestoreView(_r7);\n\n        const _r0 = i0.ɵɵreference(5);\n\n        return _r0.click();\n      });\n      i0.ɵɵtext(8, \"Upload Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"mat-progress-bar\", 8);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-tab-group\", 9);\n      i0.ɵɵelementStart(12, \"mat-tab\", 10);\n      i0.ɵɵelementStart(13, \"form\", 11);\n      i0.ɵɵelementStart(14, \"div\", 12);\n      i0.ɵɵelementStart(15, \"mat-toolbar\");\n      i0.ɵɵelementStart(16, \"h1\");\n      i0.ɵɵtext(17, \"My Profile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵelementStart(19, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(20, \"mat-label\");\n      i0.ɵɵtext(21, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(24, \"mat-label\");\n      i0.ɵɵtext(25, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 13);\n      i0.ɵɵelementStart(28, \"mat-form-field\", 17);\n      i0.ɵɵelementStart(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 13);\n      i0.ɵɵelementStart(33, \"mat-form-field\", 17);\n      i0.ɵɵelementStart(34, \"mat-label\");\n      i0.ɵɵtext(35, \"Contact Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 13);\n      i0.ɵɵelementStart(38, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(39, \"mat-label\");\n      i0.ɵɵtext(40, \"Blood Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"mat-select\", 20);\n      i0.ɵɵlistener(\"valueChange\", function ProfileComponent_Template_mat_select_valueChange_41_listener($event) {\n        return ctx.myBloodType = $event;\n      });\n      i0.ɵɵtemplate(42, ProfileComponent_mat_option_42_Template, 2, 2, \"mat-option\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(44, \"mat-label\");\n      i0.ɵɵtext(45, \"Email Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"h3\");\n      i0.ɵɵtext(48, \"Emergency Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 13);\n      i0.ɵɵelementStart(50, \"mat-form-field\", 17);\n      i0.ɵɵelementStart(51, \"mat-label\");\n      i0.ɵɵtext(52, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\", 13);\n      i0.ɵɵelementStart(55, \"mat-form-field\", 17);\n      i0.ɵɵelementStart(56, \"mat-label\");\n      i0.ɵɵtext(57, \"Contact Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"input\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"div\", 0);\n      i0.ɵɵelementStart(60, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_60_listener() {\n        return ctx.updateProfile();\n      });\n      i0.ɵɵtext(61, \"Update\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"mat-tab\", 26);\n      i0.ɵɵelementStart(63, \"mat-toolbar\");\n      i0.ɵɵelementStart(64, \"h1\");\n      i0.ɵɵtext(65, \"Files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"mat-accordion\", 27);\n      i0.ɵɵelementStart(67, \"mat-expansion-panel\");\n      i0.ɵɵelementStart(68, \"mat-expansion-panel-header\");\n      i0.ɵɵelementStart(69, \"span\");\n      i0.ɵɵtext(70, \"January 21, 2021\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"mat-panel-title\", 28);\n      i0.ɵɵelementStart(72, \"mat-icon\");\n      i0.ɵɵtext(73, \"folder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(74, \"mat-panel-description\", 29);\n      i0.ɵɵtext(75, \" Resume \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(76, \"mat-list\", 30);\n      i0.ɵɵelementStart(77, \"a\", 31);\n      i0.ɵɵelementStart(78, \"mat-list-item\");\n      i0.ɵɵelementStart(79, \"div\", 32);\n      i0.ɵɵtext(80, \"Resume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"mat-expansion-panel\");\n      i0.ɵɵelementStart(82, \"mat-expansion-panel-header\");\n      i0.ɵɵelementStart(83, \"span\");\n      i0.ɵɵtext(84, \"March 21, 2021\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(85, \"mat-panel-title\", 28);\n      i0.ɵɵelementStart(86, \"mat-icon\");\n      i0.ɵɵtext(87, \"folder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(88, \"mat-panel-description\", 29);\n      i0.ɵɵtext(89, \" Agreement Contracts \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(90, \"mat-list\", 30);\n      i0.ɵɵelementStart(91, \"a\", 31);\n      i0.ɵɵelementStart(92, \"mat-list-item\");\n      i0.ɵɵelementStart(93, \"div\", 32);\n      i0.ɵɵtext(94, \"Agreement Contracts 2021\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(95, \"mat-toolbar\");\n      i0.ɵɵelementStart(96, \"h1\");\n      i0.ɵɵtext(97, \"Invoice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(98, \"span\", 9);\n      i0.ɵɵelementStart(99, \"button\", 33);\n      i0.ɵɵtext(100, \"+ Add Invoice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"div\", 34);\n      i0.ɵɵelementStart(102, \"mat-accordion\", 27);\n      i0.ɵɵtemplate(103, ProfileComponent_div_103_Template, 11, 5, \"div\", 35);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.profiles.profile_img, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind1(10, 8, ctx.uploadProgress));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.profileFormGroup);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"value\", ctx.myBloodType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bloodTypes);\n      i0.ɵɵadvance(35);\n      i0.ɵɵpropertyInterpolate(\"href\", ctx.files !== null ? ctx.files[0] : i0.ɵɵpureFunction0(10, _c0), i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(14);\n      i0.ɵɵpropertyInterpolate(\"href\", ctx.files !== null ? ctx.files[1] : i0.ɵɵpureFunction0(11, _c0), i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.invoicesGrouped);\n    }\n  },\n  directives: [i6.DefaultLayoutDirective, i7.MatCardImage, i8.MatButton, i6.DefaultFlexDirective, i9.MatProgressBar, i10.MatTabGroup, i10.MatTab, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i11.MatToolbar, i6.DefaultLayoutGapDirective, i12.MatFormField, i12.MatLabel, i13.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.NumberValueAccessor, i14.MatSelect, i15.NgForOf, i16.MatAccordion, i16.MatExpansionPanel, i16.MatExpansionPanelHeader, i16.MatExpansionPanelTitle, i17.MatIcon, i16.MatExpansionPanelDescription, i18.MatList, i18.MatListItem, i19.MatLine, i19.MatOption],\n  pipes: [i15.AsyncPipe, i15.KeyValuePipe],\n  styles: [\".profile-image__wrapper[_ngcontent-%COMP%] {\\r\\n  width: 240px;\\r\\n  margin: 45px;\\r\\n}\\r\\n\\r\\n.profile-image[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  border-radius: 12px;\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n.profile-form__wrapper[_ngcontent-%COMP%] {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.upload-button[_ngcontent-%COMP%] {\\r\\n  background: #349b9e;\\r\\n  color: white;\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.files__list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]:hover {\\r\\n  background: rgba(52, 155, 158, 0.6);\\r\\n  transition: 0.25s;\\r\\n  color: white;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.files__wrapper[_ngcontent-%COMP%]   mat-expansion-panel[_ngcontent-%COMP%] {\\r\\n  width: 50%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUNBQW1DO0VBQ25DLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oscUJBQXFCO0FBQ3ZCOztBQUNBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWltYWdlX193cmFwcGVyIHtcclxuICB3aWR0aDogMjQwcHg7XHJcbiAgbWFyZ2luOiA0NXB4O1xyXG59XHJcblxyXG4ucHJvZmlsZS1pbWFnZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5wcm9maWxlLWZvcm1fX3dyYXBwZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLnVwbG9hZC1idXR0b24ge1xyXG4gIGJhY2tncm91bmQ6ICMzNDliOWU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLmZpbGVzX19saXN0IG1hdC1saXN0LWl0ZW06aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoNTIsIDE1NSwgMTU4LCAwLjYpO1xyXG4gIHRyYW5zaXRpb246IDAuMjVzO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuLmZpbGVzX193cmFwcGVyIG1hdC1leHBhbnNpb24tcGFuZWwge1xyXG4gIHdpZHRoOiA1MCU7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"sources":["C:\\Project\\clocked\\src\\app\\profile\\profile.component.ts","C:\\Project\\clocked\\src\\app\\profile\\profile.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {MainService} from \"../core/services/main.service\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {ProfileService} from \"../core/services/profile.service\";\r\nimport {AngularFireStorage} from \"@angular/fire/storage\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\nimport {DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileFormGroup: FormGroup;\r\n  bloodTypes: any;\r\n  profiles: any;\r\n  myBloodType: any;\r\n  myID: any;\r\n\r\n  ref: any;\r\n  task: any;\r\n  uploadProgress: any;\r\n  downloadURL: any;\r\n  uploadState: any;\r\n\r\n  defaultProfileImage: any = [];\r\n  dataImage: any = [];\r\n  files: any = [];\r\n  invoices: any =[];\r\n  invoicesGrouped: any =[];\r\n\r\n  yearNow: any = new Date().getFullYear();\r\n  constructor(private mainService: MainService,\r\n              private profileService: ProfileService,\r\n              private storage: AngularFireStorage,\r\n              private sanitizer: DomSanitizer,\r\n              private fb: FormBuilder) {\r\n    this.bloodTypes = [];\r\n    this.profiles = [];\r\n    this.profileFormGroup = this.fb.group({\r\n      first_name: [\"\"],\r\n      last_name: [\"\"],\r\n      contact_no: [\"\"],\r\n      blood_type: [\"\"],\r\n      address: [\"\"],\r\n      email_add: [\"\"],\r\n      emergency_contact: [\"\"],\r\n      emergency_name: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const collection_id = localStorage.getItem('collection-id');\r\n    this.myID = this.mainService.decrypt(collection_id, 'collection-id');\r\n    this.getUserProfile();\r\n    this.getBloodTypes();\r\n    this.getInvoices();\r\n    this.defaultProfileImage = this.profileService.defaultImage();\r\n  }\r\n\r\n  getBloodTypes() {\r\n    this.mainService.getBloodType().subscribe((res: any) => {\r\n      this.bloodTypes = res ? res.bloodtypes : [];\r\n    })\r\n  }\r\n\r\n  getInvoices() {\r\n    this.profileService.getInvoices(this.myID).subscribe(result =>{\r\n      result.map(doc =>{\r\n        const array = {\r\n          id: doc.payload.doc.id,\r\n          data: doc.payload.doc.data(),\r\n        }\r\n      this.invoices = array;\r\n      this.invoicesGrouped.push(this.invoices)\r\n      })\r\n    })\r\n  }\r\n\r\n  getUserProfile() {\r\n    this.profileService.getUserProfile(this.myID).subscribe((res: any) => {\r\n      res.profile_img = res.profile_img ? res.profile_img : this.defaultProfileImage;\r\n      this.profiles = res ?  res : [];\r\n      this.files = this.profiles.files !== null ? this.profiles.files : null;\r\n      this.myBloodType = this.profiles.blood_type;\r\n      this.patchProfileData(this.profiles);\r\n    })\r\n  }\r\n\r\n  patchProfileData(data: any) {\r\n    this.profileFormGroup = this.fb.group({\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      contact_no: data.contact_no,\r\n      blood_type: data.blood_type,\r\n      address: data.address,\r\n      email_add: data.email_add,\r\n      emergency_contact: data.emergency_contact,\r\n      emergency_name: data.emergency_name,\r\n    });\r\n  }\r\n\r\n  updateProfile() {\r\n    this.profileFormGroup.get(\"blood_type\")?.setValue(this.myBloodType);\r\n    this.profileService.updateProfile(this.profileFormGroup.value, this.myID).then((res: any) => {\r\n    })\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    const filePath = 'profiles/' + this.myID + '-profile';\r\n    this.ref = this.storage.ref(filePath);\r\n    this.task = this.ref.put(event.target.files[0]);\r\n    this.uploadProgress = this.task.percentageChanges();\r\n    this.uploadState = this.task.snapshotChanges().pipe(map((s: any) => s.state));\r\n    this.ref.getDownloadURL().subscribe((url: any) => {\r\n      this.profileService.uploadImagesUrl(url, this.myID).then((res: any) => {\r\n      })\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\">\r\n  <div fxLayout=\"column\">\r\n    <div class=\"profile-image__wrapper\">\r\n      <img class=\"profile-image\" loading=\"lazy\" mat-card-image src=\"{{profiles.profile_img}}\"\r\n           alt=\"Profile Picture\">\r\n    </div>\r\n    <input hidden #inputFileUpdate accept=\"image/*\" (change)=\"onSelectFile($event)\" type=\"file\"/>\r\n    <div class=\"upload-button__wrapper\">\r\n      <button class=\"upload-button\" type=\"button\" (click)=\"inputFileUpdate.click()\" fxFlex mat-button>Upload Profile\r\n      </button>\r\n    </div>\r\n    <mat-progress-bar mode=\"determinate\" [value]=\"(uploadProgress | async)\"></mat-progress-bar>\r\n  </div>\r\n  <mat-tab-group fxFlex>\r\n    <mat-tab label=\"Profile\">\r\n      <form fxLayout=\"row\" [formGroup]=\"profileFormGroup\">\r\n        <div class=\"profile-form__wrapper\" fxLayout=\"column\">\r\n          <mat-toolbar><h1>My Profile</h1></mat-toolbar>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" appearance=\"outline\">\r\n              <mat-label>First Name</mat-label>\r\n              <input matInput formControlName=\"first_name\" placeholder=\"First Name\">\r\n            </mat-form-field>\r\n            <mat-form-field floatLabel=\"always\" appearance=\"outline\">\r\n              <mat-label>Last Name</mat-label>\r\n              <input matInput formControlName=\"last_name\" placeholder=\"Last Name\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" fxFlex appearance=\"outline\">\r\n              <mat-label>Address</mat-label>\r\n              <input matInput formControlName=\"address\" placeholder=\"Address\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" fxFlex appearance=\"outline\">\r\n              <mat-label>Contact Number</mat-label>\r\n              <input matInput type=\"number\" formControlName=\"contact_no\" placeholder=\"Contact Number\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" appearance=\"outline\">\r\n              <mat-label>Blood Type</mat-label>\r\n              <mat-select [(value)]=\"myBloodType\" formControlName=\"blood_type\">\r\n                <mat-option *ngFor=\"let blood of bloodTypes\" [value]=\"blood\">\r\n                  {{blood}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field floatLabel=\"always\" appearance=\"outline\">\r\n              <mat-label>Email Address</mat-label>\r\n              <input matInput type=\"email\" formControlName=\"email_add\" placeholder=\"Email Address\">\r\n            </mat-form-field>\r\n          </div>\r\n          <h3>Emergency Contact</h3>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" fxFlex appearance=\"outline\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput formControlName=\"emergency_name\" placeholder=\"Name\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <mat-form-field floatLabel=\"always\" fxFlex appearance=\"outline\">\r\n              <mat-label>Contact Number</mat-label>\r\n              <input matInput type=\"number\" formControlName=\"emergency_contact\" placeholder=\"Contact Number\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\">\r\n            <button fxFlex mat-button class=\"primary-button\" (click)=\"updateProfile()\">Update</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Files\">\r\n      <mat-toolbar><h1>Files</h1></mat-toolbar>\r\n      <mat-accordion class=\"files__wrapper\">\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <span>January 21, 2021</span>\r\n            <mat-panel-title fxFlex=\"20\">\r\n              <mat-icon>folder</mat-icon>\r\n            </mat-panel-title>\r\n            <mat-panel-description fxFlex=\"30\">\r\n              Resume\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <mat-list class=\"files__list\">\r\n            <a class=\"remove-decors\" target=\"_blank\" href=\"{{files !== null ? files[0] : []}}\">\r\n              <mat-list-item>\r\n                <div mat-line>Resume</div>\r\n              </mat-list-item>\r\n            </a>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <span>March 21, 2021</span>\r\n            <mat-panel-title fxFlex=\"20\">\r\n              <mat-icon>folder</mat-icon>\r\n            </mat-panel-title>\r\n            <mat-panel-description fxFlex=\"30\">\r\n              Agreement Contracts\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <mat-list class=\"files__list\">\r\n            <a class=\"remove-decors\" target=\"_blank\" href=\"{{files !== null ? files[1] : []}}\">\r\n              <mat-list-item>\r\n                <div mat-line>Agreement Contracts 2021</div>\r\n              </mat-list-item>\r\n            </a>\r\n          </mat-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <mat-toolbar><h1>Invoice</h1> <span fxFlex></span>\r\n        <button mat-button class=\"primary-button\">+ Add Invoice</button>\r\n      </mat-toolbar>\r\n      <div class=\"invoice__wrapper\">\r\n        <mat-accordion class=\"files__wrapper\">\r\n          <div *ngFor=\"let invoices of invoicesGrouped\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title fxFlex=\"20\">\r\n                  <mat-icon class=\"blue\">paid</mat-icon>\r\n                </mat-panel-title>\r\n                <mat-panel-description fxFlex=\"30\">\r\n                  {{invoices.id}} - {{yearNow}}\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <mat-list class=\"files__list\">\r\n                <mat-list-item *ngFor=\"let inv of invoices.data | keyvalue\">\r\n                     <div mat-line>\r\n                        <a href=\"{{inv.value}}\">\r\n                          {{inv.key}}\r\n                        </a>\r\n                      </div>\r\n                </mat-list-item>\r\n              </mat-list>\r\n            </mat-expansion-panel>\r\n        </div>\r\n        </mat-accordion>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}