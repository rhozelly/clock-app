{"ast":null,"code":"import { combineLatest } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@angular/fire/storage\";\nimport * as i3 from \"@angular/common/http\";\nexport let ProfileService = /*#__PURE__*/(() => {\n  class ProfileService {\n    constructor(firestore, storage, http) {\n      this.firestore = firestore;\n      this.storage = storage;\n      this.http = http;\n      this.profile = 'profile';\n      this.basePath = '/profiles';\n      this.yearNow = new Date().getFullYear();\n    }\n\n    getProfile(id) {\n      const account_data = this.firestore.collection('account').doc(id).valueChanges();\n      const profile_data = this.firestore.collection(this.profile).doc(id).valueChanges();\n      return combineLatest(account_data, profile_data).pipe(map(arr => arr.reduce((acc, cur) => console.log(cur))));\n    }\n\n    checkCollectionId(id) {\n      return this.firestore.collection(this.profile).doc(id).get();\n    }\n\n    defaultImage() {\n      return 'https://firebasestorage.googleapis.com/v0/b/attendance-app-92cbe.appspot.com/o/profiles%2Fprofile-default.jpg?alt=media&token=227292e8-f973-42dc-bc01-63e2f9c7b5a8';\n    }\n\n    getUserProfile(id) {\n      return this.firestore.collection(this.profile).doc(id).valueChanges();\n    }\n\n    updateProfile(values, id) {\n      const data = {\n        first_name: values.first_name,\n        last_name: values.last_name,\n        contact_no: values.contact_no,\n        address: values.address,\n        blood_type: values.blood_type,\n        email_add: values.email_add,\n        emergency_contact: values.emergency_contact,\n        emergency_name: values.emergency_name\n      };\n      return this.firestore.collection(this.profile).doc(id).update(data);\n    }\n\n    addNewEmployee(values, id) {\n      const data = {\n        first_name: values.first_name.toLowerCase(),\n        last_name: values.last_name.toLowerCase(),\n        contact_no: values.contact_no,\n        address: values.address.toLowerCase(),\n        blood_type: values.blood_type,\n        email_add: values.email_add,\n        emergency_contact: values.emergency_contact,\n        emergency_name: values.emergency_name.toLowerCase(),\n        updated_at: new Date(),\n        created_at: new Date(),\n        files: [],\n        profile_img: [values.profile_img]\n      };\n      return this.firestore.collection(this.profile).doc(id).set(data);\n    }\n\n    uploadImagesUrl(url, id) {\n      const data = {\n        profile_img: url\n      };\n      return this.firestore.collection(this.profile).doc(id).update(data);\n    }\n\n    getFiles(url) {\n      return this.storage.refFromURL(url);\n    }\n\n    getInvoices(id) {\n      return this.firestore.collection(this.profile).doc(id).collection(this.yearNow.toString(), ref => ref.orderBy('15', 'asc').limit(3)).snapshotChanges();\n    }\n\n    getInvoicesByMonth(id, month) {\n      return this.firestore.collection(this.profile).doc(id).collection(this.yearNow.toString()).doc(month).valueChanges();\n    }\n\n    getAllProfiles() {\n      return this.firestore.collection(this.profile, ref => ref.orderBy('last_name', 'asc').limit(12)).snapshotChanges();\n    }\n\n    searchProfiles(searched) {\n      return this.firestore.collection(this.profile, ref => ref.orderBy('first_name', 'asc').where('first_name', '>=', searched).limit(10)).snapshotChanges();\n    }\n\n  }\n\n  ProfileService.ɵfac = function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireStorage), i0.ɵɵinject(i3.HttpClient));\n  };\n\n  ProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProfileService;\n})();","map":null,"metadata":{},"sourceType":"module"}